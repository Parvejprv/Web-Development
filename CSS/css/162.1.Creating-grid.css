/*  
How to create a grid in CSS?
=============================


Lets create the grid,
-------------------------
To create a grid we need to use the property display: grid; in the parent container.

grid-template-columns
-----------------------
It is used to specify the columns of the grid, it refers that how many of columns do you needed into the given container or grid specific.

Ex-
grid-template-columns: 200px 100px 200px;


grid-template-rows
-------------------
It is used to specify the rows of the grid, it refers that how many rows do you needed into the given container or grid specific.




- To create the grid, we have to use the property display: grid; in the parent container.
- And to specify the columns inside the grid we need to use grid-template-columns: cols-width1, cols-width2, cols-width3, cols-width4, cols-width4 ....;
- Similarily, for rows to specify the rows inside the grid we need to use grid-template-rows: row-width1, row-width2, row-width3, row-width4, row-width4 ....;
- we can alos give the value of columns and with in percent(%), and friction(fr) as well.
Ex-

grid-template-columns: 200px 100px 200px;
// Or
grid-template-columns: 30% 100px 30%;
// Or
grid-template-columns: 30% auto 30%;
// Or
grid-template-columns: 30% auto 30%;
// Or
grid-template-columns: 1fr 1fr 150px;
grid-template-columns: 1fr 1fr auto;
grid-template-columns: 1fr 1fr 1fr;
grid-template-columns: 1fr 2fr 1fr;
grid-template-columns: 1fr 1fr 3fr;
grid-template-columns: 1fr 5fr 1fr;
grid-template-columns: 100px auto 30%;


grid-template-columns: repeat(2, 200px) 1fr;
grid-template-columns: repeat(2, 200px) 50%;
grid-template-columns: 50% repeat(2, 200px);
grid-template-columns: repeat(2, 200px) 250px;

Note: we can also apply the same unit for the height means rows-
like-
grid-template-rows: repeat(2, 1fr);
grid-template-rows: 1fr 200px;


*/

*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: lightblue;
}

.container {
  background-color: #eee;
  width: 700px;
  height: 800px;
  margin: 50px 0 0 50px;
  display: grid;
  
  /* grid-template-columns: 250px 200px auto; */    /* It would used to specify the column, i.e. How many number of columns do you need with the column number. */
  /* grid-template-columns: 1fr 1fr 1fr; */
  /* grid-template-columns: 1fr 2fr 1fr; */
  /* grid-template-columns: 1fr 3fr 1fr; */
  /* grid-template-columns: repeat(2, 150px) 1fr; */
  /* grid-template-columns: repeat(2, 1fr) 1fr; */
  /* grid-template-columns: 50% repeat(2, 1fr); */
  grid-template-columns: 50% repeat(2, 150px);
  /* grid-template-columns: 1fr 10fr 1fr; */ /* friction, it means it specify the width of the container into firction */

  /* grid-template-rows: 150px 100px 100px; */    /* It would used to specify the rows, i.e. How many number of rows do you need with the rows number. Ex- Let suppose I want two rows only then I need to specify the width for these two row with size of height into row.*/

  grid-template-rows: 1fr 200px;
  grid-template-rows: repeat(2, 1fr);
  /* grid-template-rows: 1fr 200px;   */

  /* to specify the gap inside the grid */
  grid-gap: 20px;
}


.item1 {
  background-color: rgb(255, 3, 3);
}
.item2 {
  background-color: greenyellow;
}
.item3 {
  background-color: rgb(144, 6, 235)
}
.item4 {
  background-color: hotpink;
}
.item5 {
  background-color: royalblue;
}
.item6 {
  background-color: orange;
}

